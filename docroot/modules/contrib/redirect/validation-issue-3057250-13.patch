diff --git a/src/Form/RedirectForm.php b/src/Form/RedirectForm.php
index 1b4f453..e99403b 100644
--- a/src/Form/RedirectForm.php
+++ b/src/Form/RedirectForm.php
@@ -10,6 +10,7 @@ use Drupal\Core\Routing\MatchingRouteNotFoundException;
 use Drupal\Core\Url;
 use Drupal\redirect\Entity\Redirect;
 use Drupal\Core\Form\FormStateInterface;
+use Symfony\Component\Routing\Exception\ResourceNotFoundException;
 
 class RedirectForm extends ContentEntityForm {
 
@@ -143,6 +144,30 @@ class RedirectForm extends ContentEntityForm {
             '@edit-page' => $redirect->toUrl('edit-form')->toString()]));
       }
     }
+
+    // If creating new URL add checks.
+    if ($this->entity->isNew()) {
+      if ($source['path']) {
+        $source_path = trim($source['path']);
+
+        // Warning about creating a redirect from a valid path.
+        // @todo - Hmm... exception driven logic. Find a better way how to
+        //   determine if we have a valid path.
+        try {
+          \Drupal::service('router')->match('/' . $form_state->getValue(['redirect_source', 0, 'path']));
+          $form_state->setErrorByName('redirect_source', $this->t('The source path %path is likely a valid path. It is preferred to <a href="@url-alias">create URL aliases</a> for existing paths rather than redirects.',
+            ['%path' => $source_path, '@url-alias' => Url::fromRoute('path.admin_add')->toString()]));
+          }
+        catch (ResourceNotFoundException $e) {
+          // Do nothing, expected behaviour.
+          }
+      }
+
+      $element['path']['#ajax'] = [
+        'callback' => 'redirect_source_link_get_status_messages',
+        'wrapper' => 'redirect-link-status',
+      ];
+    }
   }
 
   /**
diff --git a/src/Plugin/Field/FieldWidget/RedirectSourceWidget.php b/src/Plugin/Field/FieldWidget/RedirectSourceWidget.php
index 5637b58..5a0c533 100644
--- a/src/Plugin/Field/FieldWidget/RedirectSourceWidget.php
+++ b/src/Plugin/Field/FieldWidget/RedirectSourceWidget.php
@@ -50,52 +50,6 @@ class RedirectSourceWidget extends WidgetBase {
       '#attributes' => ['data-disable-refocus' => 'true'],
     ];
 
-    // If creating new URL add checks.
-    if ($items->getEntity()->isNew()) {
-      $element['status_box'] = [
-        '#prefix' => '<div id="redirect-link-status">',
-        '#suffix' => '</div>',
-      ];
-
-      $source_path = $form_state->getValue(['redirect_source', 0, 'path']);
-      if ($source_path) {
-        $source_path = trim($source_path);
-
-        // Warning about creating a redirect from a valid path.
-        // @todo - Hmm... exception driven logic. Find a better way how to
-        //   determine if we have a valid path.
-        try {
-          \Drupal::service('router')->match('/' . $form_state->getValue(['redirect_source', 0, 'path']));
-          $element['status_box'][]['#markup'] = '<div class="messages messages--warning">' . $this->t('The source path %path is likely a valid path. It is preferred to <a href="@url-alias">create URL aliases</a> for existing paths rather than redirects.',
-              ['%path' => $source_path, '@url-alias' => Url::fromRoute('path.admin_add')->toString()]) . '</div>';
-        }
-        catch (ResourceNotFoundException $e) {
-          // Do nothing, expected behaviour.
-        }
-        catch (AccessDeniedHttpException $e) {
-          // @todo Source lookup results in an access denied, deny access?
-        }
-
-        // Warning about the path being already redirected.
-        $parsed_url = UrlHelper::parse($source_path);
-        $path = isset($parsed_url['path']) ? $parsed_url['path'] : NULL;
-        if (!empty($path)) {
-          /** @var \Drupal\redirect\RedirectRepository $repository */
-          $repository = \Drupal::service('redirect.repository');
-          $redirects = $repository->findBySourcePath($path);
-          if (!empty($redirects)) {
-            $redirect = array_shift($redirects);
-            $element['status_box'][]['#markup'] = '<div class="messages messages--warning">' . $this->t('The base source path %source is already being redirected. Do you want to <a href="@edit-page">edit the existing redirect</a>?', ['%source' => $source_path, '@edit-page' => $redirect->toUrl('edit-form')->toString()]) . '</div>';
-          }
-        }
-      }
-
-      $element['path']['#ajax'] = [
-        'callback' => 'redirect_source_link_get_status_messages',
-        'wrapper' => 'redirect-link-status',
-      ];
-    }
-
     return $element;
   }
 
